1. I should create a SSH key-pair of a public and private key. I can do this using the command line, at least in a shell like Bash using the 'ssh-keygen' command. Generally, RSA is viewed as the recommended algorithm for generating keys, so I should specify this algorithm type when I enter the command (e.g. "ssh-keygen -t RSA [...]"

2. The public key I should provide to my manager somehow (assuming I myself don't have access yet) so they can add my key to an authentication file on the server. When I attempt to login, the server should be able to verify my digital signature using my public key.

3. The private key I should keep encrypted with a password. When I try to access the server, it will attempt to verify my identity by comparing the signature generated by my private key to information stored in the public key. If my private key has been encrypted, the shell will prompt me for my password to decrypt the key before generating the signature. Once the signature is verified, I will be granted access to the server.